[{"C:\\HDP_REACT\\tr20007_vr20009crud_react\\src\\index.js":"1","C:\\HDP_REACT\\tr20007_vr20009crud_react\\src\\App.js":"2","C:\\HDP_REACT\\tr20007_vr20009crud_react\\src\\reportWebVitals.js":"3"},{"size":552,"mtime":1653465080491,"results":"4","hashOfConfig":"5"},{"size":7696,"mtime":1653532081447,"results":"6","hashOfConfig":"5"},{"size":375,"mtime":1653465080492,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f9979q",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\HDP_REACT\\tr20007_vr20009crud_react\\src\\index.js",[],[],"C:\\HDP_REACT\\tr20007_vr20009crud_react\\src\\App.js",["18","19","20"],[],"import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport {\r\n  Table, Button, Container, Modal, ModalHeader, ModalBody, FormGroup, ModalFooter\r\n} from \"reactstrap\";\r\n\r\nconst datos = [\r\n  {id: 1, nombre: \"Piratas del Caribe\", tipo: \"Pelicula\", fechaRenta: \"25/05/2022\", fechaRegreso: \"30/05/2022\", precio: 29, cantidad: 1},\r\n  {id: 2, nombre: \"Stranger Things\", tipo: \"Serie\", fechaRenta: \"20/05/2022\", fechaRegreso: \"25/05/2022\", precio: 10.99, cantidad: 2}\r\n];\r\nclass App extends React.Component{\r\n\r\n  estado = {\r\n    datos: datos,\r\n    form: {\r\n      id: '',\r\n      nombre: '',\r\n      tipo: '',\r\n      fechaRenta: '',\r\n      fechaRegreso: '',\r\n      precio: '',\r\n      cantidad: ''\r\n    },\r\n    mdInsertar: false,\r\n    mdActualizar: false,\r\n  };\r\n\r\n  handleChange = e =>{\r\n    this.setState({\r\n      form: {\r\n        ...this.estado.form,\r\n        [e.target.name]: e.target.value,\r\n      }\r\n    })\r\n  }\r\n\r\n  mostrarInsertar = () => {\r\n    this.setState({\r\n    mdInsertar: true,\r\n    });\r\n  }\r\n  cerrarInsertar = () => {\r\n    this.setState({ mdInsertar: false });\r\n  }\r\n\r\n  mostrarActualizar = (reg) => {\r\n    this.setState({\r\n      form: reg,\r\n      mdActualizar: true,\r\n    });\r\n  }\r\n  cerrarActualizar = () => {\r\n    this.setState({ mdActualizar: false });\r\n  }\r\n\r\n  insertar = () => {\r\n    var nuevo = { ...this.estado.form };\r\n    nuevo.id = this.estado.datos.length + 1;\r\n    var list = this.estado.datos;\r\n    list.push(nuevo);\r\n    this.setState({ mdInsertar: false, datos: list });\r\n  }\r\n\r\n  editar = (reg) => {\r\n    var cont = 0;\r\n    var array = this.estado.datos;\r\n    array.map((registro) => {\r\n      if (reg.id === registro.id) {\r\n        array[cont].nombre = reg.nombre;\r\n        array[cont].tipo = reg.tipo;\r\n        array[cont].fechaRenta = reg.fechaRenta;\r\n        array[cont].fechaRegreso = reg.fechaRegreso;\r\n        array[cont].precio = reg.precio;\r\n        array[cont].cantidad = reg.cantidad;\r\n      }\r\n      cont++;\r\n    });\r\n    this.setState({ datos: array, mdActualizar: false });\r\n  }\r\n\r\n  eliminar = (reg) => {\r\n    var opc = window.confirm(\"¿Está seguro de eliminar el registro?\" + reg.id);\r\n    if (opc === true) {\r\n      var cont = 0;\r\n      var arreglo = this.estado.datos;\r\n      arreglo.map((registro) => {\r\n        if (reg.id === registro.id) {\r\n          arreglo.splice(cont, 1);\r\n        }\r\n        cont++;\r\n      });\r\n      this.setState({ datos: arreglo, mdActualizar: false });\r\n    }\r\n  };\r\n\r\n  render(){\r\n    return(<>\r\n    <Container>\r\n      <br />\r\n      <Button color='success' onClick={() => this.mostrarInsertar()}>Nueva Renta</Button>\r\n      <br/><br />\r\n\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Nombre</th>\r\n            <th>Tipo</th>\r\n            <th>Fecha de Renta</th>\r\n            <th>Fecha de Devolucion</th>\r\n            <th>Precio</th>\r\n            <th>Cantidad</th>\r\n            <th>ACCIONES</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.estado.datos.map((e) => (\r\n            <tr>\r\n              <td>{e.id}</td>\r\n              <td>{e.nombre}</td>\r\n              <td>{e.tipo}</td>\r\n              <td>{e.fechaRenta}</td>\r\n              <td>{e.fechaRegreso}</td>\r\n              <td>{e.precio}</td>\r\n              <td>{e.cantidad}</td>\r\n              <td><Button color=\"primary\"\r\n                          onClick={() => this.mostrarActualizar(e)} >Editar\r\n                  </Button>{\" \"}\r\n                  <Button color='danger'\r\n                          onClick={()=> this.eliminar(e)}>Eliminar</Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </Container>\r\n\r\n    <Modal isOpen={this.estado.mostrarActualizar}>\r\n      <ModalHeader>\r\n        <div><h3>Editar el pedido de Renta</h3></div>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <FormGroup>\r\n          <label>ID:</label>\r\n          <input className='form-control'\r\n          readOnly\r\n          type=\"text\"\r\n          value={this.estado.form.id} />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <label>Nombre</label>\r\n          <input className='form-control'\r\n          name='nombre' type=\"text\" onChange={this.handleChange}\r\n          value={this.estado.form.nombre} />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <label>Tipo</label>\r\n          <input className='form-control'\r\n          name='tipo' type=\"text\" onChange={this.handleChange}\r\n          value={this.estado.form.tipo} />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <label>Fecha de Renta</label>\r\n          <input className='form-control'\r\n          name='fecharenta' type=\"text\" onChange={this.handleChange}\r\n          value={this.estado.form.fechaRenta} />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <label>Fecha de Devolucion</label>\r\n          <input className='form-control'\r\n          name='devolucion' type=\"text\" onChange={this.handleChange}\r\n          value={this.estado.form.fechaRegreso} />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <label>Precio</label>\r\n          <input className='form-control'\r\n          name='precio' type=\"text\" onChange={this.handleChange}\r\n          value={this.estado.form.precio} />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <label>Cantidad</label>\r\n          <input className='form-control'\r\n          name='cantidad' type=\"text\" onChange={this.handleChange}\r\n          value={this.estado.form.cantidad} />\r\n        </FormGroup>\r\n\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <Button color='primary' onClick={() => this.editar(this.estado.form)}>Editar</Button>\r\n        <Button color='danger' onClick={() => this.cerrarActualizar()}> Cancelar </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n\r\n    <Modal isOpen={this.estado.mdInsertar}>\r\n      <ModalHeader>\r\n        <div><h3>INSERTAR NUEVO Registro</h3></div>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <FormGroup>\r\n          <label>ID: </label>\r\n          <input className='form-control' readOnly type='text' value={this.estado.datos.length + 1} />\r\n        </FormGroup>\r\n\r\n        \r\n        <FormGroup>\r\n          <label>Nombre</label>\r\n          <input className='form-control'\r\n          name='nombre' type=\"text\" onChange={this.handleChange} />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <label>Tipo</label>\r\n          <input className='form-control'\r\n          name='tipo' type=\"text\" onChange={this.handleChange} />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <label>Fecha de Renta</label>\r\n          <input className='form-control'\r\n          name='fecharenta' type=\"text\" onChange={this.handleChange} />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <label>Fecha de Devolucion</label>\r\n          <input className='form-control'\r\n          name='devolucion' type=\"text\" onChange={this.handleChange} />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <label>Precio</label>\r\n          <input className='form-control'\r\n          name='precio' type=\"text\" onChange={this.handleChange} />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <label>Cantidad</label>\r\n          <input className='form-control'\r\n          name='cantidad' type=\"text\" onChange={this.handleChange} />\r\n        </FormGroup>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n          <Button color=\"success\" onClick={() => this.insertar()}>\r\n            Insertar\r\n          </Button>\r\n          <Button className=\"btn btn-danger\" onClick={() => this.cerrarInsertar()} >\r\n            Cancelar\r\n          </Button>\r\n        </ModalFooter>\r\n    </Modal>\r\n\r\n    </>) // fin\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\HDP_REACT\\tr20007_vr20009crud_react\\src\\reportWebVitals.js",[],[],{"ruleId":"21","severity":1,"message":"22","line":1,"column":8,"nodeType":"23","messageId":"24","endLine":1,"endColumn":12},{"ruleId":"25","severity":1,"message":"26","line":71,"column":26,"nodeType":"27","messageId":"28","endLine":71,"endColumn":28},{"ruleId":"25","severity":1,"message":"26","line":90,"column":30,"nodeType":"27","messageId":"28","endLine":90,"endColumn":32},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]